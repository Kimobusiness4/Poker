{"version":3,"sources":["components/Deck.js","components/Game.js","components/App.js","serviceWorker.js","index.js"],"names":["faces","suits","Deck","cards","arguments","length","undefined","flatMap","suit","map","value","DeckCard","Object","classCallCheck","this","shift","card","push","i","numberOfCards","newIndex","Math","floor","random","oldValue","cardDiv","document","createElement","innerText","classList","add","color","dataset","concat","PayTable","props","message","messageType","multiplier","prizes","winningHand","react_default","a","Fragment","className","Card","click","id","disabled","onClick","data-value","Hand","pokerHand","_this","indexOf","slice","groups","face","filter","j","sort","x","y","groupsJOB","shifted","distance","min","max","apply","toConsumableArray","flush","every","straight","includes","Game","state","isDeal","isDisabled","credits","creditsWon","bet","btnInfo","held","dealtCards","nextCards","handleClick","_this2","deck","shuffle","dealt","next","setState","heldItems","indexes","nextItem","items","forEach","index","item","itemsSuits","e","analyzedHand","analyze","handMessage","prize","console","log","handleCardClick","target","handleMinusBtn","handlePlusBtn","Game_PayTable","Game_Card","Component","Header","Footer","href","App","App_Header","components_Game","App_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gOAAMA,EAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KACtEC,EAAQ,CAAC,SAAK,SAAK,SAAK,UAExBC,aACF,SAAAA,IAA+B,IAAnBC,EAAmBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GA8CxBH,EAAMM,QAAQ,SAAAC,GACjB,OAAOR,EAAMS,IAAI,SAAAC,GACb,OAAO,IAAIC,EAASH,EAAME,OAhDHE,OAAAC,EAAA,EAAAD,CAAAE,KAAAZ,GAC3BY,KAAKX,MAAQA,oDAQb,OAAOW,KAAKX,MAAMY,qCAGjBC,GACDF,KAAKX,MAAMc,KAAKD,qCAIhB,IAAK,IAAIE,EAAIJ,KAAKK,cAAgB,EAAGD,EAAI,EAAGA,IAAK,CAC7C,IAAME,EAAWC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IAC3CM,EAAWV,KAAKX,MAAMiB,GAC5BN,KAAKX,MAAMiB,GAAYN,KAAKX,MAAMe,GAClCJ,KAAKX,MAAMe,GAAKM,yCAhBpB,OAAOV,KAAKX,MAAME,gBAqBpBM,aACF,SAAAA,EAAYH,EAAME,GAAQE,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACtBG,KAAKN,KAAOA,EACZM,KAAKJ,MAAQA,wDAQb,IAAMe,EAAUC,SAASC,cAAc,OAIvC,OAHAF,EAAQG,UAAYd,KAAKJ,MACzBe,EAAQI,UAAUC,IAAI,OAAQhB,KAAKiB,OACnCN,EAAQO,QAAQtB,MAAhB,GAAAuB,OAA2BnB,KAAKJ,MAAhC,KAAAuB,OAAyCnB,KAAKN,MACvCiB,gCARP,MAAqB,WAAdX,KAAKN,MAA8B,WAAdM,KAAKN,KAAe,QAAU,eAoBnDN,QCtDTgC,EAAW,SAACC,GAAU,IAChBC,EAA0DD,EAA1DC,QAASC,EAAiDF,EAAjDE,YAAaC,EAAoCH,EAApCG,WAAYC,EAAwBJ,EAAxBI,OAAQC,EAAgBL,EAAhBK,YAElD,OACIC,EAAAC,EAAAf,cAAAc,EAAAC,EAAAC,SAAA,KACIF,EAAAC,EAAAf,cAAA,OAAKiB,UAAU,aACXH,EAAAC,EAAAf,cAAA,MAAIiB,UAAU,eAAd,aACAH,EAAAC,EAAAf,cAAA,OAAKiB,UAAW,YACK,gBAAhBJ,EAAgC,SAAW,KAC5CC,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,UAAb,eAAqCH,EAAAC,EAAAf,cAAA,QAAMiB,UAAU,cAAcL,EAAO,GAAG7B,MAAQ4B,IAEzFG,EAAAC,EAAAf,cAAA,OAAKiB,UAAW,YACK,mBAAhBJ,EAAmC,SAAW,KAC/CC,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,UAAb,kBAAwCH,EAAAC,EAAAf,cAAA,QAAMiB,UAAU,cACnDL,EAAO,GAAG7B,MAAQ4B,IAE3BG,EAAAC,EAAAf,cAAA,OACIiB,UAAW,YACU,mBAAhBJ,EAAmC,SAAW,KACnDC,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,UAAb,eAAqCH,EAAAC,EAAAf,cAAA,QAAMiB,UAAU,cAChDL,EAAO,GAAG7B,MAAQ4B,IAE3BG,EAAAC,EAAAf,cAAA,OAAKiB,UAAW,YACK,eAAhBJ,EAA+B,SAAW,KAC3CC,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,UAAb,cAAoCH,EAAAC,EAAAf,cAAA,QAAMiB,UAAU,cAAcL,EAAO,GAAG7B,MAAQ4B,IAExFG,EAAAC,EAAAf,cAAA,OAAKiB,UAAW,YACK,UAAhBJ,EAA0B,SAAW,KACtCC,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,UAAb,SAA+BH,EAAAC,EAAAf,cAAA,QAAMiB,UAAU,cAAcL,EAAO,GAAG7B,MAAQ4B,IAEnFG,EAAAC,EAAAf,cAAA,OAAKiB,UAAW,YACK,aAAhBJ,EAA6B,SAAW,KACzCC,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,UAAb,YAAkCH,EAAAC,EAAAf,cAAA,QAAMiB,UAAU,cAAcL,EAAO,GAAG7B,MAAQ4B,IAEtFG,EAAAC,EAAAf,cAAA,OAAKiB,UAAW,YACK,oBAAhBJ,EAAoC,SAAW,KAChDC,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,UAAb,eAAqCH,EAAAC,EAAAf,cAAA,QAAMiB,UAAU,cAChDL,EAAO,GAAG7B,MAAQ4B,IAE3BG,EAAAC,EAAAf,cAAA,OACIiB,UAAW,YACU,aAAhBJ,EAA6B,SAAW,KAC7CC,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,UAAb,WAAiCH,EAAAC,EAAAf,cAAA,QAAMiB,UAAU,cAC5CL,EAAO,GAAG7B,MAAQ4B,IAE3BG,EAAAC,EAAAf,cAAA,OACIiB,UAAW,YACU,oBAAhBJ,EAAoC,SAAW,KACpDC,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,UAAb,mBAAyCH,EAAAC,EAAAf,cAAA,QAAMiB,UAAU,cACpDL,EAAO,GAAG7B,MAAQ4B,KAI/BG,EAAAC,EAAAf,cAAA,OAAKiB,UAAU,uBACXH,EAAAC,EAAAf,cAAA,KAAGiB,UAAW,WAAaP,GAAcD,MAMnDS,EAAO,SAACV,GAAU,IACZzB,EAAqCyB,EAArCzB,MAAOF,EAA8B2B,EAA9B3B,KAAMsC,EAAwBX,EAAxBW,MAAOC,EAAiBZ,EAAjBY,GAAIC,EAAab,EAAba,SAC5BjB,EAAQ,GAOZ,MANa,WAATvB,GAAyB,WAATA,EAChBuB,EAAQ,MAEM,WAATvB,GAAyB,WAATA,IACrBuB,EAAQ,SAGRU,EAAAC,EAAAf,cAAA,OACIsB,QAASH,EACTI,aAAA,GAAAjB,OAAevB,GAAfuB,OAAuBzB,GACvBoC,UAAS,QAAAX,OAAUF,EAAV,KAAAE,OAAmBe,EAAW,WAAa,IACpDD,GAAIA,GAEHrC,IAKPV,EAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KACtEC,EAAQ,CAAC,SAAK,SAAK,SAAK,UAExBkD,aACF,SAAAA,EAAYC,GAAW,IAAAC,EAAAvC,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAAqC,GACnBrC,KAAKd,MAAQoD,EAAU3C,IAAI,SAAAO,GAAI,OAAIhB,EAAMsD,QAAQtC,EAAKuC,MAAM,GAAI,MAChEzC,KAAKb,MAAQmD,EAAU3C,IAAI,SAAAO,GAAI,OAAIf,EAAMqD,QAAQtC,EAAKuC,OAAO,MAE7DzC,KAAK0C,OAASxD,EAAMS,IAAI,SAACgD,EAAMvC,GAAP,OAAamC,EAAKrD,MAAM0D,OAAO,SAAAC,GAAC,OAAIzC,IAAMyC,IAAGtD,SAAQuD,KAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAID,IAChG/C,KAAKiD,UAAY/D,EAAMS,IAAI,SAACgD,EAAMvC,GAAP,OAAamC,EAAKrD,MAAM0D,OAAO,SAAAC,GAAC,OAAIzC,IAAMyC,GAAKzC,EAAI,IAAGb,SAAQuD,KAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAID,IAE5G/C,KAAKkD,QAAUlD,KAAKd,MAAMS,IAAI,SAAAoD,GAAC,OAAKA,EAAI,GAAK,KAC7C/C,KAAKmD,SAAW5C,KAAK6C,IAAI7C,KAAK8C,IAALC,MAAA/C,KAAIT,OAAAyD,EAAA,EAAAzD,CAAQE,KAAKd,QAASqB,KAAK6C,IAALE,MAAA/C,KAAIT,OAAAyD,EAAA,EAAAzD,CAAQE,KAAKd,QAAQqB,KAAK8C,IAALC,MAAA/C,KAAIT,OAAAyD,EAAA,EAAAzD,CAAQE,KAAKkD,UAAW3C,KAAK6C,IAALE,MAAA/C,KAAIT,OAAAyD,EAAA,EAAAzD,CAAQE,KAAKkD,WAEzHlD,KAAKwD,MAAQxD,KAAKb,MAAMsE,MAAM,SAAA/D,GAAI,OAAIA,IAAS6C,EAAKpD,MAAM,KAC1Da,KAAK0D,SAA8B,IAAnB1D,KAAK0C,OAAO,IAAY1C,KAAKmD,SAAW,wDAIxD,OAAInD,KAAK0D,UAAY1D,KAAKwD,OAASxD,KAAKd,MAAMyE,SAAS,MAAQ3D,KAAKd,MAAMyE,SAAS,GAAW,cACrF3D,KAAK0D,UAAY1D,KAAKwD,MAAc,iBACjB,IAAnBxD,KAAK0C,OAAO,GAAiB,iBACV,IAAnB1C,KAAK0C,OAAO,IAA+B,IAAnB1C,KAAK0C,OAAO,GAAiB,aACrD1C,KAAK0D,SAAiB,WACH,IAAnB1D,KAAK0C,OAAO,GAAiB,kBACV,IAAnB1C,KAAK0C,OAAO,IAA+B,IAAnB1C,KAAK0C,OAAO,GAAiB,WAClC,IAAnB1C,KAAK0C,OAAO,IAAkC,IAAtB1C,KAAKiD,UAAU,GAAiB,kBACrD,gBAoTLW,6MA/SXC,MAAQ,CACJC,QAAQ,EACRC,YAAY,EACZC,QAAS,IACTC,WAAY,EACZC,IAAK,EACLC,QAAS,OACT7C,QAAS,2BACTC,YAAa,SAEb6C,KAAM,EAAC,GAAO,GAAO,GAAO,GAAO,GACnC1C,YAAa,GAGbD,OAAQ,CACJ,CACIa,UAAW,cACXhB,QAAS,4CACT1B,MAAO,KAEX,CACI0C,UAAW,iBACXhB,QAAS,0CACT1B,MAAO,IAEX,CACI0C,UAAW,iBACXhB,QAAS,mCACT1B,MAAO,IAEX,CACI0C,UAAW,aACXhB,QAAS,qCACT1B,MAAO,GAEX,CACI0C,UAAW,QACXhB,QAAS,gCACT1B,MAAO,GAEX,CACI0C,UAAW,WACXhB,QAAS,mCACT1B,MAAO,GAEX,CACI0C,UAAW,kBACXhB,QAAS,4BACT1B,MAAO,GAEX,CACI0C,UAAW,WACXhB,QAAS,qBACT1B,MAAO,GAEX,CACI0C,UAAW,kBACXhB,QAAS,4BACT1B,MAAO,IAIfyE,WAAY,CACR,CACIpC,GAAI,EACJrC,MAAO,GACPF,KAAM,IAEV,CACIuC,GAAI,EACJrC,MAAO,GACPF,KAAM,IAEV,CACIuC,GAAI,EACJrC,MAAO,GACPF,KAAM,IAEV,CACIuC,GAAI,EACJrC,MAAO,GACPF,KAAM,IAEV,CACIuC,GAAI,EACJrC,MAAO,GACPF,KAAM,KAGd4E,UAAW,CAAC,CACR1E,MAAO,GACPF,KAAM,IAEV,CACIE,MAAO,GACPF,KAAM,IAEV,CACIE,MAAO,GACPF,KAAM,IAEV,CACIE,MAAO,GACPF,KAAM,IAEV,CACIE,MAAO,GACPF,KAAM,QAId6E,YAAc,WACV,IAA0B,IAAtBC,EAAKX,MAAMC,OAAiB,CAC5B,IAAMW,EAAO,IAAIrF,EACjBqF,EAAKC,UACL,IAAIC,EAAQF,EAAKpF,MAAMoD,MAAM,EAAG,GAC5BmC,EAAOH,EAAKpF,MAAMoD,MAAM,EAAG,IAC/B+B,EAAKK,SAAS,CACVR,WAAYM,EACZL,UAAWM,EACXd,QAAQ,EACRC,YAAY,EACZI,QAAS,OACT7C,QAAS,uBACTC,YAAa,SACbyC,QAASQ,EAAKX,MAAMG,QAAUQ,EAAKX,MAAMK,IACzCE,KAAM,EAAC,GAAO,GAAO,GAAO,GAAO,GACnC1C,YAAa,WAEd,CAGH,IAFA,IAAIoD,EAAShF,OAAAyD,EAAA,EAAAzD,CAAO0E,EAAKX,MAAMO,MAC3BW,EAAU,GACL3E,EAAI,EAAGA,EAAI0E,EAAUvF,OAAQa,KACb,IAAjB0E,EAAU1E,IACV2E,EAAQ5E,KAAKC,GAGrB,IAAI4E,EAAQlF,OAAAyD,EAAA,EAAAzD,CAAO0E,EAAKX,MAAMS,WAC1BW,EAAKnF,OAAAyD,EAAA,EAAAzD,CAAO0E,EAAKX,MAAMQ,YAC3BU,EAAQG,QAAQ,SAAAC,GACZ,IAAIC,EAAOH,EAAME,GACjBC,EAAOJ,EAASG,GAChBF,EAAME,GAASC,IAGnB,IAAIC,EAAaJ,EAAMtF,IAAI,SAAAO,GAAI,OAAIA,EAAKR,OAEpC4C,EADa2C,EAAMtF,IAAI,SAAAO,GAAI,OAAIA,EAAKN,QACbD,IAAI,SAAC2F,EAAGlF,GAAJ,OAAUkF,EAAID,EAAWjF,KAGlDmF,EAFO,IAAIlD,EAAKC,GAEIkD,UAEtBvB,EAAa,KAEjB,GAAqB,SAAjBsB,EACAf,EAAKK,SAAS,CACVZ,WAAY,EACZ1C,YAAa,OACbD,QAAS,WACTI,YAAa,WAEd,CACH,IAAI+D,EAAc,GACd/D,EAAc,GAElB8C,EAAKX,MAAMpC,OAAOyD,QAAQ,SAACQ,GACnBH,IAAiBG,EAAMpD,YACvB2B,EAAayB,EAAM9F,MAAQ4E,EAAKX,MAAMK,IACtCuB,EAAcC,EAAMpE,QACpBI,EAAcgE,EAAMpD,aAG5BqD,QAAQC,IAAIlE,GAEZ8C,EAAKK,SAAS,CACVZ,WAAYA,EACZ1C,YAAa,MACbD,QAASmE,EAAcxB,EAAa,IACpCvC,YAAaA,IAIrB8C,EAAKK,SAAS,CACVR,WAAYY,EACZd,QAAS,OACTL,QAAQ,EACRC,YAAY,EACZC,QAASQ,EAAKX,MAAMG,QAAUC,QAK1C4B,gBAAkB,SAACP,GACf,IAAMH,EAAQG,EAAEQ,OAAO7D,GACnBgD,EAAKnF,OAAAyD,EAAA,EAAAzD,CAAO0E,EAAKX,MAAMO,MACvBgB,EAAOH,EAAME,GACjBC,GAAQA,EACRH,EAAME,GAASC,EACfZ,EAAKK,SAAS,CAAET,KAAMa,OAG1Bc,eAAiB,WACbvB,EAAKK,SAAS,CACVX,IAAKM,EAAKX,MAAMK,IAAM,OAG9B8B,cAAgB,WACZxB,EAAKK,SAAS,CACVX,IAAKM,EAAKX,MAAMK,IAAM,6EAK1B,OACIvC,EAAAC,EAAAf,cAAA,QAAMiB,UAAU,QACZH,EAAAC,EAAAf,cAACoF,EAAD,CACIxE,OAAQzB,KAAK6D,MAAMpC,OACnBD,WAAYxB,KAAK6D,MAAMK,IACvB5C,QAAStB,KAAK6D,MAAMvC,QACpBC,YAAavB,KAAK6D,MAAMtC,YACxBG,YAAa1B,KAAK6D,MAAMnC,cAE5BC,EAAAC,EAAAf,cAAA,OAAKiB,UAAU,SACXH,EAAAC,EAAAf,cAAA,OAAKiB,UAAU,cACXH,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,kBACR9B,KAAK6D,MAAMO,KAAK,GAAK,OAAS,IAEnCzC,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,kBACR9B,KAAK6D,MAAMO,KAAK,GAAK,OAAS,IAEnCzC,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,kBACR9B,KAAK6D,MAAMO,KAAK,GAAK,OAAS,IAEnCzC,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,kBACR9B,KAAK6D,MAAMO,KAAK,GAAK,OAAS,IAEnCzC,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,kBACR9B,KAAK6D,MAAMO,KAAK,GAAK,OAAS,KAGvCzC,EAAAC,EAAAf,cAAA,OAAKiB,UAAU,eACXH,EAAAC,EAAAf,cAACqF,EAAD,CACIjE,GAAI,EACJD,MAAOhC,KAAK6F,gBACZjG,MAAOI,KAAK6D,MAAMQ,WAAW,GAAGzE,MAChCF,KAAMM,KAAK6D,MAAMQ,WAAW,GAAG3E,KAC/BwC,SAAUlC,KAAK6D,MAAME,aAEzBpC,EAAAC,EAAAf,cAACqF,EAAD,CACIjE,GAAI,EACJD,MAAOhC,KAAK6F,gBACZjG,MAAOI,KAAK6D,MAAMQ,WAAW,GAAGzE,MAChCF,KAAMM,KAAK6D,MAAMQ,WAAW,GAAG3E,KAC/BwC,SAAUlC,KAAK6D,MAAME,aAEzBpC,EAAAC,EAAAf,cAACqF,EAAD,CACIjE,GAAI,EACJD,MAAOhC,KAAK6F,gBACZjG,MAAOI,KAAK6D,MAAMQ,WAAW,GAAGzE,MAChCF,KAAMM,KAAK6D,MAAMQ,WAAW,GAAG3E,KAC/BwC,SAAUlC,KAAK6D,MAAME,aAEzBpC,EAAAC,EAAAf,cAACqF,EAAD,CACIjE,GAAI,EACJD,MAAOhC,KAAK6F,gBACZjG,MAAOI,KAAK6D,MAAMQ,WAAW,GAAGzE,MAChCF,KAAMM,KAAK6D,MAAMQ,WAAW,GAAG3E,KAC/BwC,SAAUlC,KAAK6D,MAAME,aAEzBpC,EAAAC,EAAAf,cAACqF,EAAD,CACIjE,GAAI,EACJD,MAAOhC,KAAK6F,gBACZjG,MAAOI,KAAK6D,MAAMQ,WAAW,GAAGzE,MAChCF,KAAMM,KAAK6D,MAAMQ,WAAW,GAAG3E,KAC/BwC,SAAUlC,KAAK6D,MAAME,eAKjCpC,EAAAC,EAAAf,cAAA,OAAMiB,UAAU,sBACZH,EAAAC,EAAAf,cAAA,OAAKiB,UAAU,QACXH,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,QAAb,WACAH,EAAAC,EAAAf,cAAA,QAAMiB,UAAU,SAAS9B,KAAK6D,MAAMG,UAExCrC,EAAAC,EAAAf,cAAA,OAAKiB,UAAU,OACXH,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,QAAb,OACAH,EAAAC,EAAAf,cAAA,OAAKiB,UAAU,YACXH,EAAAC,EAAAf,cAAA,UACIqB,SAAUlC,KAAK6D,MAAMK,IAAM,EAC3B/B,QAASnC,KAAK+F,eAAgBjE,UAAU,WAF5C,KAGAH,EAAAC,EAAAf,cAAA,QAAMiB,UAAU,SAAhB,IAA0B9B,KAAK6D,MAAMK,IAArC,KACAvC,EAAAC,EAAAf,cAAA,UACIqB,SAAUlC,KAAK6D,MAAMK,IAAM,EAC3B/B,QAASnC,KAAKgG,cAAelE,UAAU,WAF3C,OAKRH,EAAAC,EAAAf,cAAA,UAAQsB,QAASnC,KAAKuE,YAAatC,GAAG,QAAQH,UAAU,aAAa9B,KAAK6D,MAAMM,kBAzSjFgC,aC/GbC,SAAS,WACb,OACEzE,EAAAC,EAAAf,cAAA,UAAQiB,UAAU,cAChBH,EAAAC,EAAAf,cAAA,cAAKc,EAAAC,EAAAf,cAAA,QAAMiB,UAAU,SAAhB,cAAL,IAA+CH,EAAAC,EAAAf,cAAA,WAA/C,IAAsDc,EAAAC,EAAAf,cAAA,QAAMiB,UAAU,gBAAhB,uBAKtDuE,EAAS,WACb,OACE1E,EAAAC,EAAAf,cAAA,UAAQiB,UAAU,UAChBH,EAAAC,EAAAf,cAAA,SAAOiB,UAAU,QAAjB,cAAmCH,EAAAC,EAAAf,cAAA,KAAGiB,UAAU,YAAYwE,KAAK,gCAA9B,aAAnC,gBAyBSC,mLAhBX,OACE5E,EAAAC,EAAAf,cAAAc,EAAAC,EAAAC,SAAA,KACEF,EAAAC,EAAAf,cAAA,OAAKiB,UAAU,WACbH,EAAAC,EAAAf,cAAC2F,EAAD,MACA7E,EAAAC,EAAAf,cAAC4F,EAAD,MACA9E,EAAAC,EAAAf,cAAC6F,EAAD,eARQP,aCTEQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtF,EAAAC,EAAAf,cAACqG,EAAD,MAAStG,SAASuG,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.13c80d37.chunk.js","sourcesContent":["const faces = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\r\nconst suits = ['♥', '♦', '♣', '♠'];\r\n\r\nclass Deck {\r\n    constructor(cards = newDeck()) {\r\n        this.cards = cards;\r\n    }\r\n\r\n    get numberOfCards() {\r\n        return this.cards.length\r\n    }\r\n\r\n    pop() {\r\n        return this.cards.shift();\r\n    }\r\n\r\n    push(card) {\r\n        this.cards.push(card)\r\n    }\r\n\r\n    shuffle() {\r\n        for (let i = this.numberOfCards - 1; i > 0; i--) {\r\n            const newIndex = Math.floor(Math.random() * (i + 1))\r\n            const oldValue = this.cards[newIndex]\r\n            this.cards[newIndex] = this.cards[i]\r\n            this.cards[i] = oldValue\r\n        }\r\n    }\r\n}\r\n\r\nclass DeckCard {\r\n    constructor(suit, value) {\r\n        this.suit = suit;\r\n        this.value = value;\r\n    }\r\n\r\n    get color() {\r\n        return this.suit === '♠' || this.suit === '♣' ? 'black' : 'red';\r\n    }\r\n\r\n    getHTML() {\r\n        const cardDiv = document.createElement('div');\r\n        cardDiv.innerText = this.value;\r\n        cardDiv.classList.add('card', this.color);\r\n        cardDiv.dataset.value = `${this.value} ${this.suit}`;\r\n        return cardDiv;\r\n    }\r\n}\r\n\r\nfunction newDeck() {\r\n    return suits.flatMap(suit => {\r\n        return faces.map(value => {\r\n            return new DeckCard(suit, value);\r\n        })\r\n    })\r\n}\r\n\r\nexport default Deck","import React, { Component } from 'react';\r\nimport Deck from './Deck.js';\r\n\r\nconst PayTable = (props) => {\r\n    const { message, messageType, multiplier, prizes, winningHand } = props;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"pay-table\">\r\n                <h2 className=\"table-title\">Pay table</h2>\r\n                <div className={\"tb tb-1 \" +\r\n                    (winningHand === 'royal-flush' ? 'active' : '')}>\r\n                    <p className=\"item-1\">Royal flush</p><span className=\"multiplier\">{prizes[0].value * multiplier}</span>\r\n                </div>\r\n                <div className={\"tb tb-2 \" +\r\n                    (winningHand === 'straight-flush' ? 'active' : '')}>\r\n                    <p className=\"item-2\">Straight flush</p><span className=\"multiplier\">\r\n                        {prizes[1].value * multiplier}</span>\r\n                </div>\r\n                <div\r\n                    className={\"tb tb-3 \" +\r\n                        (winningHand === 'four-of-a-kind' ? 'active' : '')}>\r\n                    <p className=\"item-3\">4 of a kind</p><span className=\"multiplier\">\r\n                        {prizes[2].value * multiplier}</span>\r\n                </div>\r\n                <div className={\"tb tb-4 \" +\r\n                    (winningHand === 'full-house' ? 'active' : '')}>\r\n                    <p className=\"item-4\">Full House</p><span className=\"multiplier\">{prizes[3].value * multiplier}</span>\r\n                </div>\r\n                <div className={\"tb tb-5 \" +\r\n                    (winningHand === 'flush' ? 'active' : '')}>\r\n                    <p className=\"item-5\">Flush</p><span className=\"multiplier\">{prizes[4].value * multiplier}</span>\r\n                </div>\r\n                <div className={\"tb tb-6 \" +\r\n                    (winningHand === 'straight' ? 'active' : '')}>\r\n                    <p className=\"item-6\">Straight</p><span className=\"multiplier\">{prizes[5].value * multiplier}</span>\r\n                </div>\r\n                <div className={\"tb tb-7 \" +\r\n                    (winningHand === 'three-of-a-kind' ? 'active' : '')}>\r\n                    <p className=\"item-7\">3 of a kind</p><span className=\"multiplier\">\r\n                        {prizes[6].value * multiplier}</span>\r\n                </div>\r\n                <div\r\n                    className={\"tb tb-8 \" +\r\n                        (winningHand === 'two-pair' ? 'active' : '')}>\r\n                    <p className=\"item-8\">2 pairs</p><span className=\"multiplier\">\r\n                        {prizes[7].value * multiplier}</span>\r\n                </div>\r\n                <div\r\n                    className={\"tb tb-9 \" +\r\n                        (winningHand === 'jacks-or-better' ? 'active' : '')}>\r\n                    <p className=\"item-9\">Jacks or better</p><span className=\"multiplier\">\r\n                        {prizes[8].value * multiplier}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"panel panel-message\">\r\n                <p className={\"message \" + messageType}>{message}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Card = (props) => {\r\n    const { value, suit, click, id, disabled } = props;\r\n    let color = ''\r\n    if (suit === '♥' || suit === '♦') {\r\n        color = 'red';\r\n    }\r\n    else if (suit === '♣' || suit === '♠') {\r\n        color = 'black';\r\n    }\r\n    return (\r\n        <div\r\n            onClick={click}\r\n            data-value={`${value}${suit}`}\r\n            className={`card ${color} ${disabled ? 'disabled' : ''}`}\r\n            id={id}\r\n        >\r\n            {value}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst faces = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\r\nconst suits = ['♥', '♦', '♣', '♠'];\r\n\r\nclass Hand {\r\n    constructor(pokerHand) {\r\n        this.faces = pokerHand.map(card => faces.indexOf(card.slice(0, -1)));\r\n        this.suits = pokerHand.map(card => suits.indexOf(card.slice(-1)));\r\n\r\n        this.groups = faces.map((face, i) => this.faces.filter(j => i === j).length).sort((x, y) => y - x);\r\n        this.groupsJOB = faces.map((face, i) => this.faces.filter(j => i === j && i > 8).length).sort((x, y) => y - x);\r\n\r\n        this.shifted = this.faces.map(x => (x + 1) % 13);\r\n        this.distance = Math.min(Math.max(...this.faces) - Math.min(...this.faces), Math.max(...this.shifted) - Math.min(...this.shifted));\r\n\r\n        this.flush = this.suits.every(suit => suit === this.suits[0]);\r\n        this.straight = this.groups[0] === 1 && this.distance < 5;;\r\n    }\r\n    analyze() {\r\n\r\n        if (this.straight && this.flush && this.faces.includes(12) && !this.faces.includes(0)) return 'royal-flush';\r\n        else if (this.straight && this.flush) return 'straight-flush';\r\n        else if (this.groups[0] === 4) return 'four-of-a-kind';\r\n        else if (this.groups[0] === 3 && this.groups[1] === 2) return 'full-house';\r\n        else if (this.straight) return 'straight';\r\n        else if (this.groups[0] === 3) return 'three-of-a-kind';\r\n        else if (this.groups[0] === 2 && this.groups[1] === 2) return 'two-pair';\r\n        else if (this.groups[0] === 2 && this.groupsJOB[0] === 2) return 'jacks-or-better';\r\n        else return 'loss';\r\n    }\r\n}\r\n\r\nclass Game extends Component {\r\n    state = {\r\n        isDeal: true,\r\n        isDisabled: true,\r\n        credits: 100,\r\n        creditsWon: 0,\r\n        bet: 1,\r\n        btnInfo: 'DEAL',\r\n        message: 'Press the button to play',\r\n        messageType: 'normal',\r\n\r\n        held: [false, false, false, false, false],\r\n        winningHand: '',\r\n\r\n\r\n        prizes: [\r\n            {\r\n                pokerHand: 'royal-flush',\r\n                message: \"Jackpot!!! It's a Royal FLush!!! You win \",\r\n                value: 250,\r\n            },\r\n            {\r\n                pokerHand: 'straight-flush',\r\n                message: \"Superb! It's a Straight FLush! You win \",\r\n                value: 50,\r\n            },\r\n            {\r\n                pokerHand: 'four-of-a-kind',\r\n                message: \"Superb! Four of a kind! You win \",\r\n                value: 25,\r\n            },\r\n            {\r\n                pokerHand: 'full-house',\r\n                message: \"Great, it's a full house! You win \",\r\n                value: 9,\r\n            },\r\n            {\r\n                pokerHand: 'flush',\r\n                message: \"Great, it's a flush! You win \",\r\n                value: 6,\r\n            },\r\n            {\r\n                pokerHand: 'straight',\r\n                message: \"Great, it's a straight. You win \",\r\n                value: 4,\r\n            },\r\n            {\r\n                pokerHand: 'three-of-a-kind',\r\n                message: 'Three of a kind, you win ',\r\n                value: 3,\r\n            },\r\n            {\r\n                pokerHand: 'two-pair',\r\n                message: 'Two pair, you win ',\r\n                value: 2,\r\n            },\r\n            {\r\n                pokerHand: 'jacks-or-better',\r\n                message: 'Jacks or better, you win ',\r\n                value: 1,\r\n            },\r\n        ],\r\n\r\n        dealtCards: [\r\n            {\r\n                id: 0,\r\n                value: '',\r\n                suit: '',\r\n            },\r\n            {\r\n                id: 1,\r\n                value: '',\r\n                suit: '',\r\n            },\r\n            {\r\n                id: 2,\r\n                value: '',\r\n                suit: '',\r\n            },\r\n            {\r\n                id: 3,\r\n                value: '',\r\n                suit: '',\r\n            },\r\n            {\r\n                id: 4,\r\n                value: '',\r\n                suit: '',\r\n            },\r\n        ],\r\n        nextCards: [{\r\n            value: '',\r\n            suit: '',\r\n        },\r\n        {\r\n            value: '',\r\n            suit: '',\r\n        },\r\n        {\r\n            value: '',\r\n            suit: '',\r\n        },\r\n        {\r\n            value: '',\r\n            suit: '',\r\n        },\r\n        {\r\n            value: '',\r\n            suit: '',\r\n        },]\r\n    }\r\n\r\n    handleClick = () => {\r\n        if (this.state.isDeal === true) {\r\n            const deck = new Deck();\r\n            deck.shuffle();\r\n            let dealt = deck.cards.slice(0, 5)\r\n            let next = deck.cards.slice(5, 10)\r\n            this.setState({\r\n                dealtCards: dealt,\r\n                nextCards: next,\r\n                isDeal: false,\r\n                isDisabled: false,\r\n                btnInfo: 'DRAW',\r\n                message: 'Choose cards to hold',\r\n                messageType: 'normal',\r\n                credits: this.state.credits - this.state.bet,\r\n                held: [false, false, false, false, false],\r\n                winningHand: null,\r\n            });\r\n        } else {\r\n            let heldItems = [...this.state.held];\r\n            let indexes = [];\r\n            for (let i = 0; i < heldItems.length; i++) {\r\n                if (heldItems[i] === false) {\r\n                    indexes.push(i);\r\n                }\r\n            }\r\n            let nextItem = [...this.state.nextCards];\r\n            let items = [...this.state.dealtCards];\r\n            indexes.forEach(index => {\r\n                let item = items[index];\r\n                item = nextItem[index];\r\n                items[index] = item;\r\n            })\r\n\r\n            let itemsSuits = items.map(card => card.suit);\r\n            let itemsFaces = items.map(card => card.value);\r\n            let pokerHand = itemsFaces.map((e, i) => e + itemsSuits[i])\r\n            const hand = new Hand(pokerHand)\r\n\r\n            const analyzedHand = hand.analyze();\r\n\r\n            let creditsWon = null;\r\n\r\n            if (analyzedHand === 'loss') {\r\n                this.setState({\r\n                    creditsWon: 0,\r\n                    messageType: 'lose',\r\n                    message: 'You lose',\r\n                    winningHand: null,\r\n                });\r\n            } else {\r\n                let handMessage = '';\r\n                let winningHand = '';\r\n\r\n                this.state.prizes.forEach((prize) => {\r\n                    if (analyzedHand === prize.pokerHand) {\r\n                        creditsWon = prize.value * this.state.bet;\r\n                        handMessage = prize.message;\r\n                        winningHand = prize.pokerHand;\r\n                    }\r\n                })\r\n                console.log(winningHand)\r\n\r\n                this.setState({\r\n                    creditsWon: creditsWon,\r\n                    messageType: 'win',\r\n                    message: handMessage + creditsWon + '!',\r\n                    winningHand: winningHand,\r\n                });\r\n            }\r\n\r\n            this.setState({\r\n                dealtCards: items,\r\n                btnInfo: 'DEAL',\r\n                isDeal: true,\r\n                isDisabled: true,\r\n                credits: this.state.credits + creditsWon,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleCardClick = (e) => {\r\n        const index = e.target.id;\r\n        let items = [...this.state.held];\r\n        let item = items[index];\r\n        item = !item;\r\n        items[index] = item;\r\n        this.setState({ held: items });\r\n    }\r\n\r\n    handleMinusBtn = () => {\r\n        this.setState({\r\n            bet: this.state.bet - 1,\r\n        })\r\n    }\r\n    handlePlusBtn = () => {\r\n        this.setState({\r\n            bet: this.state.bet + 1,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main className=\"main\">\r\n                <PayTable\r\n                    prizes={this.state.prizes}\r\n                    multiplier={this.state.bet}\r\n                    message={this.state.message}\r\n                    messageType={this.state.messageType}\r\n                    winningHand={this.state.winningHand}\r\n                />\r\n                <div className=\"board\">\r\n                    <div className=\"board-info\">\r\n                        <p className=\"a1 action-info\">\r\n                            {this.state.held[0] ? 'HOLD' : ''}\r\n                        </p>\r\n                        <p className=\"a2 action-info\">\r\n                            {this.state.held[1] ? 'HOLD' : ''}\r\n                        </p>\r\n                        <p className=\"a3 action-info\">\r\n                            {this.state.held[2] ? 'HOLD' : ''}\r\n                        </p>\r\n                        <p className=\"a4 action-info\">\r\n                            {this.state.held[3] ? 'HOLD' : ''}\r\n                        </p>\r\n                        <p className=\"a5 action-info\">\r\n                            {this.state.held[4] ? 'HOLD' : ''}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"board-cards\">\r\n                        <Card\r\n                            id={0}\r\n                            click={this.handleCardClick}\r\n                            value={this.state.dealtCards[0].value}\r\n                            suit={this.state.dealtCards[0].suit}\r\n                            disabled={this.state.isDisabled}\r\n                        />\r\n                        <Card\r\n                            id={1}\r\n                            click={this.handleCardClick}\r\n                            value={this.state.dealtCards[1].value}\r\n                            suit={this.state.dealtCards[1].suit}\r\n                            disabled={this.state.isDisabled}\r\n                        />\r\n                        <Card\r\n                            id={2}\r\n                            click={this.handleCardClick}\r\n                            value={this.state.dealtCards[2].value}\r\n                            suit={this.state.dealtCards[2].suit}\r\n                            disabled={this.state.isDisabled}\r\n                        />\r\n                        <Card\r\n                            id={3}\r\n                            click={this.handleCardClick}\r\n                            value={this.state.dealtCards[3].value}\r\n                            suit={this.state.dealtCards[3].suit}\r\n                            disabled={this.state.isDisabled}\r\n                        />\r\n                        <Card\r\n                            id={4}\r\n                            click={this.handleCardClick}\r\n                            value={this.state.dealtCards[4].value}\r\n                            suit={this.state.dealtCards[4].suit}\r\n                            disabled={this.state.isDisabled}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                < div className=\"panel panel-action\" >\r\n                    <div className=\"cash\">\r\n                        <p className=\"name\">Credits</p>\r\n                        <span className=\"money\">{this.state.credits}</span>\r\n                    </div>\r\n                    <div className=\"bet\">\r\n                        <p className=\"name\">Bet</p>\r\n                        <div className=\"bet-wrap\">\r\n                            <button\r\n                                disabled={this.state.bet < 2 ? true : false}\r\n                                onClick={this.handleMinusBtn} className=\"bet-btn\">-</button>\r\n                            <span className=\"money\"> {this.state.bet} </span>\r\n                            <button\r\n                                disabled={this.state.bet > 3 ? true : false}\r\n                                onClick={this.handlePlusBtn} className=\"bet-btn\">+</button>\r\n                        </div>\r\n                    </div>\r\n                    <button onClick={this.handleClick} id=\"start\" className=\"start-btn\">{this.state.btnInfo}</button>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;","import React, { Component } from 'react';\r\nimport Game from './Game.js';\r\nimport './App.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"title-wrap\">\r\n      <h1> <span className=\"title\">VIDEOPOKER</span> <br /> <span className=\"title__fancy\">Jacks or Better</span></h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <small className=\"copy\">Created by <a className=\"copy-link\" href=\"https://github.com/brozinsky\">brozinsky</a> &copy;\r\n      2020</small>\r\n    </footer>\r\n  );\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"wrapper\">\r\n          <Header />\r\n          <Game />\r\n          <Footer />\r\n        </div>\r\n        {/* <img class=\"frame tl\" src=\"./svg/decorations.svg\" />\r\n        <img class=\"frame tr\" src=\"./svg/decorations.svg\" />\r\n        <img class=\"frame bl\" src=\"./svg/decorations.svg\" />\r\n        <img class=\"frame br\" src=\"./svg/decorations.svg\" /> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}